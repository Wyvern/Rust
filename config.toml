[alias]
rr = "run -r"
br = "build -r"
bl = "build --lib -r"
tr = "test -r"
dr = "doc -r"

[cargo-new]
vcs = "none" 

#dev
[profile.dev]
rustflags = ["-Cprefer-dynamic","-Crpath",]
[profile.dev.package."*"]
inherits = "release"
[profile.dev.build-override]
inherits = "release"

#test
[profile.test]
inherits = "dev"
[profile.test.package."*"]
inherits = "release"
[profile.test.build-override]
inherits = "release"

#bench
[profile.bench.package."*"]
inherits = "bench"
[profile.bench.build-override]
inherits = "bench"
[profile.bench]
inherits = "release"

#release
[profile.release.build-override]
inherits = "release"
[profile.release.package."*"]
inherits = "release"
[profile.release]
rustflags=["-Cprefer-dynamic","-Crpath","-Zmir-opt-level=4","-Zcombine-cgu"]
opt-level='s'
strip=true

#lto
[profile.lto]
inherits = "release"
rustflags = ["-Cpanic=abort","-Zpanic-in-drop=abort"]
lto=true
[profile.lto.build-override]
inherits = "lto"
[profile.lto.package."*"]
inherits = "lto"

#std
[profile.std]
inherits = "release"
rustflags = ["-Zbuild-std=core,alloc,std,macros,test,compiler_builtins,panic_abort","-Zbuild-std-features=panic_immediate_abort,compiler-builtins-mem","-Zpanic-in-drop=abort","-Cpanic=abort"]
#lto=true
[profile.std.build-override]
inherits = "std"
[profile.std.package."*"]
inherits = "std"


[unstable]
#check-cfg="features,names,values,output"
avoid-dev-deps=true
dual-proc-macros=true
panic-abort-tests=true
bindeps=true
binary-dep-depinfo=true
multitarget=true

[build]
rustflags = [
"-Ctarget-feature=-crt-static",
"-Ctarget-cpu=native",
"-Csymbol-mangling-version=v0",
"-Coverflow-checks=no",
"-Clink-self-contained=no",
#"-Cprefer-dynamic",
#"-Crpath",
#"-Cpanic=abort",

"-Ztune-cpu=native",
"-Zno-profiler-runtime",
"-Znew-llvm-pass-manager=y",
"-Zthinlto",
"-Zno-generate-arange-section",
"-Zdep-info-omit-d-target",
"-Zpolonius",
"-Ztrim-diagnostic-paths",
"-Zoom=abort",
"-Zthir-unsafeck",
"-Zshare-generics",
"-Zplt",
"-Zgcc-ld=lld",
"-Zmerge-functions=aliases",#trampolines
"-Zfewer-names",
"-Zpolymorphize",
"-Zinline-mir",
#"-Zcombine-cgu",

"-Aunused",
"-Anonstandard_style",
"-Frust_2018_compatibility",
"-Frust_2018_idioms",
"-Fdeprecated",

#"-Clink-args=-Wl,",
]
#target="x86_64-apple-darwin"

[target.x86_64-unknown-linux-gnu]
linker = "clang"
rustflags = ["-Clink-arg=--ld-path=/usr/local/bin/mold"]
